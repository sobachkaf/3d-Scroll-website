@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
:where(p:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
  display: block;
  max-width: 100%;
  height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
  /**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
  scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
  display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
  cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill=none],
[fill^=url])) {
  fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke=none],
[stroke^=url])) {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
  border-collapse: collapse;
  border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
body {
  overflow-x: hidden;
}

html.is-lock {
  overflow: hidden;
}

body {
  font-size: clamp(0.875rem, 0.8112745098rem + 0.2614379085vw, 1.125rem);
  display: flex;
  flex-direction: column;
  font-family: var(--font-family-base);
  letter-spacing: -0.03em;
  color: var(--color-light-gray);
  background-color: var(--color-black);
}

main {
  flex-grow: 1;
}

h1, .h1,
h2, .h2,
h3, .h3,
h4, .h4,
h5, .h5,
h6, .h6 {
  color: var(--color-light);
  font-weight: 700;
  text-transform: uppercase;
}

h1, .h1 {
  font-size: clamp(1.875rem, 1.237745098rem + 2.614379085vw, 4.375rem);
  line-height: 1.2;
}

h2, .h2 {
  font-size: clamp(1.75rem, 1.2720588235rem + 1.9607843137vw, 3.625rem);
  line-height: 1.3;
}

h3, .h3 {
  font-size: clamp(1.5rem, 1.2450980392rem + 1.045751634vw, 2.5rem);
  line-height: 1.5;
}

h4, .h4 {
  font-size: clamp(1.125rem, 0.9975490196rem + 0.522875817vw, 1.625rem);
  line-height: 1.5;
}

h5, .h5 {
  font-size: clamp(1.125rem, 1.0294117647rem + 0.3921568627vw, 1.5rem);
}

h6, .h6 {
  font-size: clamp(1rem, 0.9362745098rem + 0.2614379085vw, 1.25rem);
}

a,
button,
label,
input,
textarea,
select,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  color: inherit;
}
a[class] {
  text-decoration: none;
}

:focus-visible {
  outline: 0.125rem dashed var(--color-light);
  outline-offset: 0.25rem;
  transition-duration: 0s !important;
}

a[arial-label],
button[arial-label] {
  position: relative;
}
a[arial-label]::before,
button[arial-label]::before {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 2.75rem;
  height: 2.75rem;
  content: "";
}

/* Chrome, Safari, Edge, Opera */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Firefox */
input[type=number] {
  -moz-appearance: textfield;
}

@font-face {
  font-family: "Inter";
  src: url(../fonts/Inter-Regular.woff2);
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url(../fonts/Inter-Medium.woff2);
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url(../fonts/Inter-SemiBold.woff2);
  font-weight: 600;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url(../fonts/Inter-Bold.woff2);
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (width <= 47.99875rem) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (width > 47.99875rem) {
  .visible-mobile {
    display: none !important;
  }
}

.full-vw-line {
  position: relative;
}
.full-vw-line::before, .full-vw-line::after {
  position: absolute;
  width: calc((100vw - var(--container-width)) / 2);
  height: 0.0625rem;
  background-color: var(--color-dark-15);
}
.full-vw-line--top::before {
  content: "";
  bottom: 100%;
}
.full-vw-line--bottom::after {
  content: "";
  top: 100%;
}
.full-vw-line--left::before, .full-vw-line--left::after {
  right: 100%;
}
.full-vw-line--right::before, .full-vw-line--right::after {
  left: 100%;
}

.circle-icon {
  --circleSize: 3.25rem;
  --cirleMarginLeft: 1.25rem;
  padding-right: calc(var(--circleSize) + var(--cirleMarginLeft));
  position: relative;
  min-height: var(--circleSize);
}
@media (width <= 90.06125rem) {
  .circle-icon {
    --circleSize: 2.75rem;
    --cirleMarginLeft: 0.875rem;
  }
}
@media (width <= 47.99875rem) {
  .circle-icon {
    --circleSize: 2.5rem;
  }
}
.circle-icon::after {
  width: var(--circleSize);
  height: var(--circleSize);
  position: absolute;
  top: 50%;
  translate: 0 -50%;
  content: "";
  right: 0;
  background: url("./icons/arrow-top-right_black.svg") center no-repeat var(--color-accent);
  border-radius: 50%;
}

@media (any-hover: hover) {
  .block-up:hover {
    transform: translateY(-5px);
    box-shadow: 0 3px 10px var(--color-dark-20);
    transition-duration: 0.4s;
  }
}
@media (any-hover: none) {
  .block-up:active {
    transform: translateY(-5px);
    box-shadow: 0 3px 10px var(--color-dark-20);
    transition-duration: 0.4s;
  }
}

:root {
  --index: calc(1vw + 1vh);
  --gutter: 30px;
  --side-small: 26;
  --side-big: 36;
  --depth: 4000px;
  --transition: .75s cubic-bezier(.075, .5, 0, 1) ;
}

/* Скрываем Scrollbar */
body {
  scrollbar-width: none; /* Firefox */
}

body::-webkit-scrollbar {
  display: none; /* Safari and Chrome */
}

body {
  background-color: #000;
  color: #fff;
  font-size: calc(var(--index) * 0.8);
  font-family: raleway_c, sans-serif;
  line-height: 1.75;
  height: var(--depth);
  font-weight: 300;
}

.container {
  width: 100%;
  height: 100%;
  position: fixed;
  perspective: 1500px;
}

.gallery {
  transform-style: preserve-3d;
  height: 100%;
}

.frame {
  width: 100%;
  height: 100%;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition), opacity 0.75s ease;
  will-change: transform;
  transform-style: preserve-3d;
}

h1, h2, h3, h4 {
  font-weight: 100;
  text-transform: uppercase;
  width: min-content;
  line-height: 1;
}

.frame h2 {
  text-align: center;
  font-size: calc(var(--index) * 3.3);
}

.frame-media {
  position: relative;
  width: calc(var(--index) * var(--side-small));
  height: calc(var(--index) * var(--side-big));
  background-position: center;
  background-size: cover;
}

.frame-media_left {
  right: calc(var(--side-small) / 2 * var(--index) + var(--gutter));
}
.frame-media_left-center {
  right: 0;
}

.frame-media_right {
  left: calc(var(--side-small) / 2 * var(--index) + var(--gutter));
}
.frame-media_right-center {
  left: 0;
}

.frame_bg {
  background-color: rgba(0, 0, 0, 0.87);
}

video.frame-media {
  width: calc(var(--index) * var(--side-big));
  height: calc(var(--index) * var(--side-small));
}

video.frame-media_right {
  left: calc(var(--side-big) / 2 * var(--index) + var(--gutter));
}

video.frame-media_left {
  right: calc(var(--side-big) / 2 * var(--index) + var(--gutter));
}

.text-right > * {
  position: relative;
  left: 18vw;
}

.text-left > * {
  position: relative;
  right: 18vw;
}

.frame h3 {
  font-size: calc(var(--index) * 3);
}

.frame p {
  max-width: 30vw;
  margin-top: 3vh;
}

.soundbutton {
  position: fixed;
  bottom: 5vh;
  right: 5vw;
  cursor: pointer;
  width: 3rem;
  transition: 0.25s ease;
}
@media (width <= 47.99875rem) {
  .soundbutton {
    width: 1.5rem;
  }
}

.soundbutton.paused {
  opacity: 0.25;
}

/*# sourceMappingURL=main.css.map */
